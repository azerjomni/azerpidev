<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = [
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_open_file' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'messagerie_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MessagerieBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'test' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MessagerieBundle\\Controller\\MessageController::indextAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/try',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affich' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MessagerieBundle\\Controller\\MessageController::affichAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/affichMessages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'Ajout' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MessagerieBundle\\Controller\\MessageController::ajoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/AjoutMessages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supp' => array (  0 =>   array (    0 => 'id',    1 => 'id1',  ),  1 =>   array (    '_controller' => 'MessagerieBundle\\Controller\\MessageController::suppAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id1',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/suppMessages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update' => array (  0 =>   array (    0 => 'id',    1 => 'id1',  ),  1 =>   array (    '_controller' => 'MessagerieBundle\\Controller\\MessageController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id1',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/updateMessages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affichC' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MessagerieBundle\\Controller\\ConversationController::affichConversationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/affichConversations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AjoutC' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MessagerieBundle\\Controller\\ConversationController::AjoutConversationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajoutConversation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'suppC' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MessagerieBundle\\Controller\\ConversationController::suppConversationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/supprimerConversation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updateC' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'MessagerieBundle\\Controller\\ConversationController::updateConversationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/updateConversation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'competition_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CompetitionBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajoutercompetition' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CompetitionBundle\\Controller\\CompetitionController::ajoutercompetitionAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ajoutercompetition',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affichercompetition' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CompetitionBundle\\Controller\\CompetitionController::afficherCompetitionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/affichercompetition',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affichercomp' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CompetitionBundle\\Controller\\CompetitionController::afficherCompAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/affichercomp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supprimercompetition' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CompetitionBundle\\Controller\\CompetitionController::supprimerCompetitionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/supprimercompetition',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supprimerparticipation' => array (  0 =>   array (    0 => 'id',    1 => 'id1',  ),  1 =>   array (    '_controller' => 'CompetitionBundle\\Controller\\ParticipationController::supprimerParticipationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id1',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/supprimerparticipation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supprimercompetitionAdmin' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CompetitionBundle\\Controller\\CompetitionController::supprimerCompetitionAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/supprimercompetitionAdmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modifiercompetition' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CompetitionBundle\\Controller\\CompetitionController::modifierCompetitionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/modifiercompetition',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouterticket' => array (  0 =>   array (    0 => 'id',    1 => 'type',  ),  1 =>   array (    '_controller' => 'CompetitionBundle\\Controller\\TicketController::ajouterTicketAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/ajouterTicket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supprimerticket' => array (  0 =>   array (    0 => 'id',    1 => 'id1',  ),  1 =>   array (    '_controller' => 'CompetitionBundle\\Controller\\TicketController::supprimerTicketAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id1',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/supprimerticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouterparticipation' => array (  0 =>   array (    0 => 'id',    1 => 'type',  ),  1 =>   array (    '_controller' => 'CompetitionBundle\\Controller\\ParticipationController::ajouterParticipationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/ajouterparticipation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affichercompetitionUser' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CompetitionBundle\\Controller\\CompetitionController::afficherCompetitionUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/affichercompetitionUser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affichercompetitionAdmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CompetitionBundle\\Controller\\CompetitionController::afficherCompetitionAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/affichercompetitionAdmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'Ticket' => array (  0 =>   array (    0 => 'id',    1 => 'type',  ),  1 =>   array (    '_controller' => 'CompetitionBundle\\Controller\\TicketController::afficherTicketAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/Ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'detailuser' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CompetitionBundle\\Controller\\CompetitionController::detailuserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/detailuser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajax_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CompetitionBundle\\Controller\\CompetitionController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pdf' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'CompetitionBundle\\Controller\\TicketController::pdfAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/pdf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pie' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'CompetitionBundle\\Controller\\CompetitionController::pieAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'publication_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PostController::affichagePostAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'publication_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PostController::AjouterPostVIAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/newsfeed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'publication_edit' => array (  0 =>   array (    0 => 'id_post',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PostController::ModifierPostAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_post',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'publication_delete' => array (  0 =>   array (    0 => 'id_post',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PostController::DeletePostAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_post',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'publication_show_one1' => array (  0 =>   array (    0 => 'id_post',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PostController::showoneAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show1',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_post',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commentaire_add' => array (  0 =>   array (    0 => 'post_id',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\commentaireController::AjouterCommentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'post_id',    ),    1 =>     array (      0 => 'text',      1 => '/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commentaire_modif' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\commentaireController::editCommentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/editcom',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commentaire_supprimer' => array (  0 =>   array (    0 => 'id_com',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\commentaireController::deleteCommentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_com',    ),    1 =>     array (      0 => 'text',      1 => '/supprimercommentaire',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'vote_add' => array (  0 =>   array (    0 => 'id_post',    1 => 'slug',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PostController::VoteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/voteup',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_post',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'react_with' => array (  0 =>   array (    0 => 'id_post',    1 => 'type',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PostController::ReactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/reactwith',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_post',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'visit_profile' => array (  0 =>   array (    0 => 'id_user',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PostController::visitprofileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'publication_share_one' => array (  0 =>   array (    0 => 'id_post',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PostController::shareoneAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/share',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_post',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'share' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PostController::addpostajAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/sharenow',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show_one_post' => array (  0 =>   array (    0 => 'id_post',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PostController::showPost1Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_post',    ),    1 =>     array (      0 => 'text',      1 => '/showonepost',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show_Admin_posts' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PostController::showPostforadminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/showpostsadmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show_Admin_post' => array (  0 =>   array (    0 => 'id_post',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PostController::showPost1AdiminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_post',    ),    1 =>     array (      0 => 'text',      1 => '/showonepostadmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commentaire_supprimera' => array (  0 =>   array (    0 => 'id_com',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\commentaireController::deleteCommentAAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_com',    ),    1 =>     array (      0 => 'text',      1 => '/supprimercommentairea',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commentaire_addad' => array (  0 =>   array (    0 => 'post_id',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\commentaireController::AjouterCommentadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'post_id',    ),    1 =>     array (      0 => 'text',      1 => '/newad',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'publication_addelete' => array (  0 =>   array (    0 => 'id_post',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PostController::DeletePostadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/deletead',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id_post',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOSBundle\\Controller\\SecurityController::redirectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'blog_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BlogBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'blog_ajoutBlog' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BlogBundle\\Controller\\BlogController::ajoutBlogAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Ajout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'blog_afficheBlog' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BlogBundle\\Controller\\BlogController::afficheBlogAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Affiche',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'blog_supprimerBlog' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BlogBundle\\Controller\\BlogController::supprimerBlogAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/supprimerBlog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'blog_modifierBlog' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BlogBundle\\Controller\\BlogController::modifierBlogAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/modifierBlog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'blog_voirBlog' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BlogBundle\\Controller\\BlogController::voirBlogAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/voirBlog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'blog_afficheBlogUser' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BlogBundle\\Controller\\BlogController::afficheBlogUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/AfficheBlogUser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'blog_voirBlogUser' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BlogBundle\\Controller\\BlogController::voirBlogUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/voirBlogUser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_comment' => array (  0 =>   array (    0 => 'post_id',  ),  1 =>   array (    '_controller' => 'BlogBundle\\Controller\\BlogController::addCommentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'post_id',    ),    1 =>     array (      0 => 'text',      1 => '/addcomment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_comment' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'BlogBundle\\Controller\\BlogController::deleteCommentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/deletecomment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AffichierComments' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'BlogBundle\\Controller\\BlogController::AffichierCommentsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/AffichierComments/{}',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.change_password.controller:changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_list' => array (  0 =>   array (    0 => 'notifiable',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    1 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_mark_as_seen' => array (  0 =>   array (    0 => 'notifiable',    1 => 'notification',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::markAsSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notification',    ),    1 =>     array (      0 => 'text',      1 => '/mark_as_seen',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    3 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_mark_as_unseen' => array (  0 =>   array (    0 => 'notifiable',    1 => 'notification',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::markAsUnSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notification',    ),    1 =>     array (      0 => 'text',      1 => '/mark_as_unseen',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    3 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_mark_all_as_seen' => array (  0 =>   array (    0 => 'notifiable',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::markAllAsSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markAllAsSeen',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    2 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    ];
        }
    }

    public function generate($name, $parameters = [], $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
